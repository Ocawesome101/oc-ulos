//// ULOS User Guide ////

This is the official user guide for the Unix-Like Operating System (ULOS).  Any errors should be reported on the issues page of this repository.

/// Contents

Conventions
System Requirements
Installation
  - Prerequisites
  - Step 1
  - Step 2
  - Step 3
General Use
  - The Lisp-ish Shell
  - Commands
  - Filesystem Hierarchy
  - Package Management
Troubleshooting
  - Installation

/// Conventions

All examples are shown indented by four spaces.  Words or phrases encased in single-quotes (') should be entered without the quotes.

/// System Requirements

ULOS requires at least 384 kilobytes of memory for the live image, or at least 256 kilobytes if running from an installed medium.  An internet card is necessary to download the installation files.

The installed system consumes around 300KB of disk space.

/// Installation

This section of the Guide will instruct you in installing ULOS.

// Prerequisites

Ensure that your computer meets the system requirements listed above.  Ensure that you have booted from a medium containing OpenOS, and that there is at least one writable drive in your computer other than this one.

// Step 1: Download the live image

Type 'mount' into the OpenOS shell and press the [enter] key on your keyboard.  You should see a list on-screen that looks like something like this:

    a7541fb5 on /tmp     (rw) "tmpfs"
    c7223813 on /mnt/c72 (rw) "c7223813-1686-48ae-89e4-b86150cc0771"
    e48f3373 on /        (rw) "OpenOS"
    e48f3373 on /mnt/e48 (rw) "OpenOS"
    f5501a9b on /dev     (rw) "devfs"

Locate the entry whose address matches that of your writable installation disk.  In this case, the matching entry is 'c7223813 on /mnt/c72 (rw) "c7223813-1686-48ae-89e4-b86150cc0771"'.  Note the path at which is mounted, '/mnt/c72'.

In the OpenOS shell, type 'wget https://raw.githubusercontent.com/ocawesome101/oc-ulos/master/release.lua PATH/init.lua', replacing PATH with the path from the last instruction.  If the download is successful, you should see the word 'Downloading...' appear on screen, then after awhile 'success.  Saved data to PATH/init.lua'.


// Step 2. Boot the live image

Now, shut down your computer.  Remove the medium on which OpenOS is installed, and turn on the computer.  You should be greeted with a screen bearing the words "Cynosure MTAR-FS Loader" across the top, and some status messages below that, as shown:

    █████████████Cynosure MTAR-FS Loader██████████████
    Seeking to data section.... -
    Reading file headers...bin/ls.lua


This screen is effectively a progress bar displayed by the live image's boot loader.  It will take some time to complete.  Once it has finished, the loader will load and execute the kernel.

If ULOS boots successfully, you will see a login prompt similar to that shown below.

    Welcome to ULOS.

    login: █

Log in with the username 'root' and the password 'root'.  There will be no visual indication during password entry.  You should now see the following:

    login: root
    password:

    <root@localhost: root> █

You have reached ULOS's read-only live environment.  Experiment as much as you wish.

/ Step 3. Install ULOS

Ensure you have a blank disk drive (whether it is a hard disk or a floppy disk does not matter) in your computer, excluding the installation drive[1].  In the shell, execute 'install'.  You should see something similar to the following.  If you wish to cancel the installation process, hold down the Control key on your keyboard and, as you do so, press D.  Release both keys at once.

    Available filesystems:
    1. c7223813-1686-4a8e-89e4-b86150cc0771
    2. 201496e4-e4ff-4e2c-8015-a114a523c53c
    Please input your selection.
    > █

The installer will continue to prompt you with '>' until you have entered a valid numerical choice.

    > cabbage
    > 4
    > 15
    > FORTY-TWO!!!!
    > 2

If an internet card is installed, the installer will prompt you for whether to download ULOS from the internet using UPM.  This is generally a good idea as it will be slightly more up-to-date.

    Perform an online installation? [Y/n]: █

If you select 'y', the installer will ask whether to include manual pages and TLE in the installed package.  This is generally a good idea.

    Install the full system (manual pages, TLE)?  [Y/n]: █

Once this process has been completed, the installer will install ULOS to the selected medium.  This will take some time.  Once the installer has finished, it will silently exit.

You may continue to experiment with the live environment, or restart your computer and boot from the writable freshly-installed medium.

Congratulations!  You have successfully installed the Unix-Like Operating System on your computer.

/// General Use

// The Lisp-ish Shell

The default shell for all users in ULOS is the Lisp-ish Shell.  Its syntax mirrors a Lisp much more closely than the Bourne shell.

Perhaps the most important syntactical difference is the method of grabbing the output from a program;  where in the Bourne shell one would write

    a $(b -cd) e f

the Lisp-ish Shell syntax is

    a (b -cd) e f

to grab the program's output, or

    a [b -cd] e f

to grab the program's exit status.  In any case, the result will be inserted as arguments (if capturing the program's output, then it will be split on every new-line character) to the parent program.

Building on this syntax, rather than have a separate syntax for getting and setting environment variables, the Lisp-ish shell has two builtins, 'get' and 'set'.  Where the equivalent Bourne expression would be

    echo $TERM
    set EXAMPLE=abc
    FOUR=$EXAMPLE

the Lisp-ish Shell syntax is

    echo (get TERM)
    set EXAMPLE abc
    set FOUR (get example)

When executed with no arguments, the 'get' builtin will print all currently set environment variables and their values in a manner similar to the Bourne shell's 'set'.

The Lisp-ish Shell eliminates the need for the Bourne shell's third syntax type: prompt shorthand substitution.  Where PS1 in the Bourne shell would be

    PS1='<\u@\h: \W> '

the Lisp-ish Shell equivalent is

    set PS1 '<(get USER)@(or (get HOSTNAME) localhost): (or (match (get PWD) \"([^/]+)/?$\") /)>'

This is more complex on the surface, and certainly less concise, but the premise is really very simple:  for every value within a set of parentheses '()', the shell is to substitute the result of the evaluated expression instead.  Thus, where the Bourne shell's output is

    <root@localhost: root>

the Lisp-ish Shell's output is exactly the same.

    <root@localhost: root>

The Lisp-ish Shell names its built-ins differently, and furthermore contains a different set of builtins, than the Bourne shell.  The Lisp-ish Shell's built-ins, and a short description of each:

    or A B      Print whichever argument evaluates to a truthy value, or nothing
    get K       Print the value of environment variable K
    set K V     Set environment variable K to value V
    match S P   Equivalent to the Lua expression 'string.match(S, P)'
    gsub S P R  Equivalent to the Lua expression 'string.gsub(S, P, R)'
    sub S A B   Print substring [A..B] of S
    cd D        Identical to the Bourne shell builtin of the same name
    time P ...  Print how long a program took
    + A B       Add A and B, and print the result
    - A B       Subtract B from A, and print the result
    / A B       Divide A/B, and print the result
    * A B       Multiply A by B, and print the result
    = A B       If A == B, exit status 0;  else, exit status 1
    into F ...  Concatenate arguments with newlines, and dump the result into F
    seq A B     Print all numbers from A to B

// Commands

A list of currently available commands may be obtained by running 'ls /bin'.

The included default editor is TLE (https://github.com/ocawesome101/tle).

Certain ULOS coreutils have different enough functionality from their Linux or UNIX counterparts to be worth mentioning here:

The 'passwd' command combines 'usermod', 'useradd', and 'userdel' into one command.  It can also display user information and, of course, change the password of any user whom the current user has permission to modify.

There is no 'umount' command;  use 'mount -u' instead.

The 'sudo' command by default sudos to root;  this can be changed by setting the first parameter to 'uid=UID', where 'UID' is the desired UID.  This is not how the Linux version of 'sudo' operates.

All commands will accept the '--help' option and, when invoked with it, will display some informational text about the command to the standard error.

// Filesystem Hierarchy

The ULOS filesystem hierarchy is as follows:

    /bin/                 Executable programs.
    /sbin/                Programs necessary to boot;  also 'sudo', 'shutdown'.
    /lib/                 Libraries.
    /usr/                 Certain user documents.  Primarily for compatibility.
      |- share/           Shared files (for example, TLE highlighting data).
      |- lib/             Certain user libraries.
      |- bin/             Certain user binaries.
      |- man/             Manual pages.
    /etc/                 System-wide configuration.
      |- rf/              Scripts and services for Refinement.
      |- rf.cfg           Refinement init's master configuration file.
      |- upm/             Data for the ULOS Package Manaager
      |- upm.cfg          UPM's configuration file.
    /sys/                 The Cynosure sysfs.
      |- mounts           File containing filesystem mount information.
      |- dev/             Device files (the devfs).  For example, TTY streams.
      |- components/      Component data.
      |   |- by-address/  Component data by address.
      |   |- by-type/     Component data by type.
      |- proc/            The Cynosure procfs.  Only for process information.

// Package Management
  Packages may be installed and removed with the ULOS Package Manager (UPM).

  UPM's usage is generally similar to Debian's Advanced Packaging Tool (APT), with 'install', 'remove', 'search', and 'update' all being recognized command verbs.

  A fairly detailed help text will be printed if UPM is invoked with the '--help' command line option, or the 'help' command verb.

  See the UPM manual page for more details.

/ Installing packages

    upm install <package ...>

/ Update the system
  
    upm update
    upm upgrade


/// Troubleshooting

// Installation

If step 1 fails with "command not found" or similar:  Carefully check your spelling.

If step 1 fails with "unknown host: Name or service not known" or similar:  Ensure that the URL you have entered is correct.

If step 1 fails with "This program requires an internet card to run":  Ensure that you have an internet card installed in your computer.

If step 2 fails with "Not enough memory" or similar: Ensure you have at least 384 KB of memory in your computer.

If step 2 fails with "No bootable medium found" or similar:  Ensure that the file on your installation disk is named 'init.lua'.

If step 2 fails with a kernel panic, and it is not one of the above errors, please file a bug report on the ULOS GitHub Issues page.


/// Footnotes

1.  ULOS may be able to install over its live image on the same medium, but this is untested and liable to fail.
